[33mcommit e4ad7a10faa44281019882b24516684c532f3e7c[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Thu Aug 1 17:31:45 2024 +0500

    Updation till Exam Record Creation Stage

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex 3c2166e..25f0143 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -5,35 +5,25 @@[m [mfrom django.contrib.auth.decorators import login_required[m
 from .models import Student[m
 from .forms import StudentForm[m
 from core.decorators import can_view, can_add_update, can_delete[m
[31m-[m
[32m+[m[32mfrom core.decorators import faculty_required[m
 @login_required[m
[31m-@can_view[m
 def student(request):[m
     # Retrieve the user role and department ID if available[m
[31m-    user_role = request.user.role[m
     user_department_id = request.user.department.department_id if hasattr(request.user, 'department') else None[m
 [m
     # Filter students based on user role and department[m
[31m-    if user_role == 'Admin':[m
[31m-        students = Student.objects.all()[m
[31m-    elif user_role in ['Faculty', 'Editor']:[m
[31m-        # Filter students based on the department of the program[m
[31m-        students = Student.objects.filter(department_id=user_department_id)[m
[31m-    else:[m
[31m-        students = Student.objects.none()[m
[31m-[m
[31m-    # Create forms for adding and updating students[m
     if request.user.role == 'Admin':[m
[32m+[m[32m        students = Student.objects.all()[m
         form = StudentForm()[m
     elif request.user.role in ['Faculty', 'Editor']:[m
[32m+[m[32m        students = Student.objects.filter(department_id=user_department_id)[m
         form = StudentForm(department_id=request.user.department.department_id)[m
[32m+[m[32m    else:[m
[32m+[m[32m        students = Student.objects.none()[m
     update_forms = {[m
     student.student_id: StudentForm(instance=student, department_id=request.user.department.department_id)[m
     for student in students[m
[31m-}[m
[31m-[m
[31m-[m
[31m-    # Context to pass to the template[m
[32m+[m[32m}   # Context to pass to the template[m
     context = {[m
         'students': students,[m
         'form': form,[m
[36m@@ -77,6 +67,7 @@[m [mdef student_update(request, student_id):[m
 @csrf_exempt[m
 @login_required[m
 @can_delete[m
[32m+[m[32m@faculty_required[m
 def student_delete(request, student_id):[m
     student = get_object_or_404(Student, student_id=student_id)[m
 [m

[33mcommit 867cffd01a917165db3b99fda44e3182cb67f0a6[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Wed Jul 31 16:05:24 2024 +0500

    Updated the Forms Functionality

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex 8c671bb..3c2166e 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -23,8 +23,15 @@[m [mdef student(request):[m
         students = Student.objects.none()[m
 [m
     # Create forms for adding and updating students[m
[31m-    form = StudentForm()[m
[31m-    update_forms = {student.student_id: StudentForm(instance=student) for student in students}[m
[32m+[m[32m    if request.user.role == 'Admin':[m
[32m+[m[32m        form = StudentForm()[m
[32m+[m[32m    elif request.user.role in ['Faculty', 'Editor']:[m
[32m+[m[32m        form = StudentForm(department_id=request.user.department.department_id)[m
[32m+[m[32m    update_forms = {[m
[32m+[m[32m    student.student_id: StudentForm(instance=student, department_id=request.user.department.department_id)[m
[32m+[m[32m    for student in students[m
[32m+[m[32m}[m
[32m+[m
 [m
     # Context to pass to the template[m
     context = {[m

[33mcommit 0a3e4c0b1e4fce48ddfb5070e315b79f8efa2239[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Tue Jul 30 18:53:33 2024 +0500

    Permission applied

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex 95b6e2e..8c671bb 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -1,14 +1,15 @@[m
 from django.shortcuts import render, get_object_or_404[m
 from django.http import JsonResponse[m
[32m+[m[32mfrom django.views.decorators.csrf import csrf_exempt[m
 from django.contrib.auth.decorators import login_required[m
[31m-from .models import Student, Department, Program, Batch[m
[32m+[m[32mfrom .models import Student[m
 from .forms import StudentForm[m
 from core.decorators import can_view, can_add_update, can_delete[m
 [m
 @login_required[m
 @can_view[m
 def student(request):[m
[31m-    # Retrieve the user role[m
[32m+[m[32m    # Retrieve the user role and department ID if available[m
     user_role = request.user.role[m
     user_department_id = request.user.department.department_id if hasattr(request.user, 'department') else None[m
 [m
[36m@@ -16,7 +17,8 @@[m [mdef student(request):[m
     if user_role == 'Admin':[m
         students = Student.objects.all()[m
     elif user_role in ['Faculty', 'Editor']:[m
[31m-        students = Student.objects.filter(batch__program__department__department_id=user_department_id)[m
[32m+[m[32m        # Filter students based on the department of the program[m
[32m+[m[32m        students = Student.objects.filter(department_id=user_department_id)[m
     else:[m
         students = Student.objects.none()[m
 [m
[36m@@ -27,15 +29,13 @@[m [mdef student(request):[m
     # Context to pass to the template[m
     context = {[m
         'students': students,[m
[31m-        'departments': Department.objects.all(),[m
[31m-        'programs': Program.objects.all(),[m
[31m-        'batches': Batch.objects.all(),[m
         'form': form,[m
         'update_forms': update_forms,[m
     }[m
 [m
     return render(request, 'students/students.html', context)[m
 [m
[32m+[m[32m@csrf_exempt[m
 @login_required[m
 @can_add_update[m
 def add_student(request):[m
[36m@@ -45,14 +45,19 @@[m [mdef add_student(request):[m
             student = form.save()[m
             return JsonResponse({'success': True, 'message': f'{student.first_name} added successfully'})[m
         else:[m
[31m-            return JsonResponse({'success': False, 'message': 'Student adding error: ' + str(form.errors)})[m
[32m+[m[32m            return JsonResponse({'success': False, 'message': 'Error adding student: ' + str(form.errors)})[m
     return JsonResponse({'success': False, 'message': 'Invalid request'})[m
 [m
[32m+[m[32m@csrf_exempt[m
 @login_required[m
 @can_add_update[m
 def student_update(request, student_id):[m
     student = get_object_or_404(Student, student_id=student_id)[m
 [m
[32m+[m[32m    # Check if the logged-in user has permission to update this student[m
[32m+[m[32m    if request.user.role not in ['Admin', 'Faculty', 'Editor']:[m
[32m+[m[32m        return JsonResponse({'success': False, 'message': 'You do not have permission to update students.'})[m
[32m+[m
     if request.method == 'POST':[m
         form = StudentForm(request.POST, instance=student)[m
         if form.is_valid():[m
[36m@@ -62,11 +67,16 @@[m [mdef student_update(request, student_id):[m
             return JsonResponse({'success': False, 'message': 'Failed to update student.', 'errors': form.errors})[m
     return JsonResponse({'success': False, 'message': 'Invalid request method'})[m
 [m
[32m+[m[32m@csrf_exempt[m
 @login_required[m
 @can_delete[m
 def student_delete(request, student_id):[m
     student = get_object_or_404(Student, student_id=student_id)[m
 [m
[32m+[m[32m    # Check if the logged-in user has permission to delete this student[m
[32m+[m[32m    if request.user.role not in ['Admin', 'Faculty', 'Editor']:[m
[32m+[m[32m        return JsonResponse({'success': False, 'message': 'You do not have permission to delete students.'})[m
[32m+[m
     if request.method == 'POST':[m
         student.delete()[m
         return JsonResponse({'success': True, 'message': f'Student {student.first_name} {student.last_name} deleted successfully.'})[m

[33mcommit fe827ee19ded912f13dc4cd4e618e550aad67ac2[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Tue Jul 30 16:52:22 2024 +0500

    Added Permission based Functionality

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex eb1312d..95b6e2e 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -1,33 +1,43 @@[m
[31m-# students/views.py[m
[31m-from django.shortcuts import render, get_object_or_404, redirect[m
[32m+[m[32mfrom django.shortcuts import render, get_object_or_404[m
 from django.http import JsonResponse[m
[32m+[m[32mfrom django.contrib.auth.decorators import login_required[m
 from .models import Student, Department, Program, Batch[m
 from .forms import StudentForm[m
[31m-from django.contrib.auth.decorators import login_required [m
[31m-from django.contrib.auth.models import Group[m
[31m-[m
[32m+[m[32mfrom core.decorators import can_view, can_add_update, can_delete[m
 [m
 @login_required[m
[32m+[m[32m@can_view[m
 def student(request):[m
[31m-    students = Student.objects.all()[m
[31m-    departments = Department.objects.all()[m
[31m-    programs = Program.objects.all()[m
[31m-    batches = Batch.objects.all()[m
[31m-    form = StudentForm()[m
[32m+[m[32m    # Retrieve the user role[m
[32m+[m[32m    user_role = request.user.role[m
[32m+[m[32m    user_department_id = request.user.department.department_id if hasattr(request.user, 'department') else None[m
 [m
[31m-    # Create a dictionary of forms for each student[m
[32m+[m[32m    # Filter students based on user role and department[m
[32m+[m[32m    if user_role == 'Admin':[m
[32m+[m[32m        students = Student.objects.all()[m
[32m+[m[32m    elif user_role in ['Faculty', 'Editor']:[m
[32m+[m[32m        students = Student.objects.filter(batch__program__department__department_id=user_department_id)[m
[32m+[m[32m    else:[m
[32m+[m[32m        students = Student.objects.none()[m
[32m+[m
[32m+[m[32m    # Create forms for adding and updating students[m
[32m+[m[32m    form = StudentForm()[m
     update_forms = {student.student_id: StudentForm(instance=student) for student in students}[m
 [m
[31m-    return render(request, 'students/students.html', {[m
[32m+[m[32m    # Context to pass to the template[m
[32m+[m[32m    context = {[m
         'students': students,[m
[31m-        'departments': departments,[m
[31m-        'programs': programs,[m
[31m-        'batches': batches,[m
[32m+[m[32m        'departments': Department.objects.all(),[m
[32m+[m[32m        'programs': Program.objects.all(),[m
[32m+[m[32m        'batches': Batch.objects.all(),[m
         'form': form,[m
         'update_forms': update_forms,[m
[31m-    })[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return render(request, 'students/students.html', context)[m
 [m
 @login_required[m
[32m+[m[32m@can_add_update[m
 def add_student(request):[m
     if request.method == 'POST':[m
         form = StudentForm(request.POST)[m
[36m@@ -39,8 +49,10 @@[m [mdef add_student(request):[m
     return JsonResponse({'success': False, 'message': 'Invalid request'})[m
 [m
 @login_required[m
[32m+[m[32m@can_add_update[m
 def student_update(request, student_id):[m
     student = get_object_or_404(Student, student_id=student_id)[m
[32m+[m
     if request.method == 'POST':[m
         form = StudentForm(request.POST, instance=student)[m
         if form.is_valid():[m
[36m@@ -51,8 +63,10 @@[m [mdef student_update(request, student_id):[m
     return JsonResponse({'success': False, 'message': 'Invalid request method'})[m
 [m
 @login_required[m
[32m+[m[32m@can_delete[m
 def student_delete(request, student_id):[m
     student = get_object_or_404(Student, student_id=student_id)[m
[32m+[m
     if request.method == 'POST':[m
         student.delete()[m
         return JsonResponse({'success': True, 'message': f'Student {student.first_name} {student.last_name} deleted successfully.'})[m

[33mcommit e45fce409087be7852f3831053808c222cfc0119[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Mon Jul 29 16:02:27 2024 +0500

     Changes on the admin side

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex f34bd46..eb1312d 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -4,6 +4,8 @@[m [mfrom django.http import JsonResponse[m
 from .models import Student, Department, Program, Batch[m
 from .forms import StudentForm[m
 from django.contrib.auth.decorators import login_required [m
[32m+[m[32mfrom django.contrib.auth.models import Group[m
[32m+[m
 [m
 @login_required[m
 def student(request):[m

[33mcommit bc3636837e2b2971841b2cb9d8768c79655680ef[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Thu Jul 25 15:34:19 2024 +0500

    Login and Logout implementation

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex 64e0ea8..f34bd46 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -3,7 +3,9 @@[m [mfrom django.shortcuts import render, get_object_or_404, redirect[m
 from django.http import JsonResponse[m
 from .models import Student, Department, Program, Batch[m
 from .forms import StudentForm[m
[32m+[m[32mfrom django.contrib.auth.decorators import login_required[m[41m [m
 [m
[32m+[m[32m@login_required[m
 def student(request):[m
     students = Student.objects.all()[m
     departments = Department.objects.all()[m
[36m@@ -23,6 +25,7 @@[m [mdef student(request):[m
         'update_forms': update_forms,[m
     })[m
 [m
[32m+[m[32m@login_required[m
 def add_student(request):[m
     if request.method == 'POST':[m
         form = StudentForm(request.POST)[m
[36m@@ -33,6 +36,7 @@[m [mdef add_student(request):[m
             return JsonResponse({'success': False, 'message': 'Student adding error: ' + str(form.errors)})[m
     return JsonResponse({'success': False, 'message': 'Invalid request'})[m
 [m
[32m+[m[32m@login_required[m
 def student_update(request, student_id):[m
     student = get_object_or_404(Student, student_id=student_id)[m
     if request.method == 'POST':[m
[36m@@ -44,6 +48,7 @@[m [mdef student_update(request, student_id):[m
             return JsonResponse({'success': False, 'message': 'Failed to update student.', 'errors': form.errors})[m
     return JsonResponse({'success': False, 'message': 'Invalid request method'})[m
 [m
[32m+[m[32m@login_required[m
 def student_delete(request, student_id):[m
     student = get_object_or_404(Student, student_id=student_id)[m
     if request.method == 'POST':[m

[33mcommit e5670a7d622df425aaa85bea3494e31f132ec54d[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Thu Jul 25 12:49:44 2024 +0500

    Fixed Updation in every section

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex 8c1a54b..64e0ea8 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -50,45 +50,3 @@[m [mdef student_delete(request, student_id):[m
         student.delete()[m
         return JsonResponse({'success': True, 'message': f'Student {student.first_name} {student.last_name} deleted successfully.'})[m
     return JsonResponse({'success': False, 'message': 'Invalid request method'})[m
[31m-[m
[31m-[m
[31m-[m
[31m-# # students/views.py[m
[31m-# from django.shortcuts import render, redirect[m
[31m-# from django.http import JsonResponse[m
[31m-# from .models import Student, Department, Program, Batch[m
[31m-[m
[31m-# def student(request):[m
[31m-#     students = Student.objects.all()[m
[31m-#     departments = Department.objects.all()[m
[31m-#     programs = Program.objects.all()[m
[31m-#     batches = Batch.objects.all()[m
[31m-#     statuses = Student.STUDENT_STATUS_CHOICES  # Get status choices directly from the model[m
[31m-#     return render(request, 'students/students.html', {[m
[31m-#         'students': students,[m
[31m-#         'departments': departments,[m
[31m-#         'programs': programs,[m
[31m-#         'batches': batches,[m
[31m-#         'statuses': statuses  # Pass statuses to the template[m
[31m-#     })[m
[31m-[m
[31m-# def add_student(request):[m
[31m-#     if request.method == 'POST':[m
[31m-#         try:[m
[31m-#             student = Student([m
[31m-#                 first_name=request.POST.get('first_name'),[m
[31m-#                 last_name=request.POST.get('last_name'),[m
[31m-#                 father_name=request.POST.get('father_name'),[m
[31m-#                 date_of_birth=request.POST.get('date_of_birth'),[m
[31m-#                 registration_number = request.POST.get('registration_number', '').upper(),[m
[31m-#                 enrollment_year=request.POST.get('enrollment_year'),[m
[31m-#                 status=request.POST.get('status'),[m
[31m-#                 department_id=request.POST.get('department'),[m
[31m-#                 program_id=request.POST.get('program'),[m
[31m-#                 batch_id=request.POST.get('batch')[m
[31m-#             )[m
[31m-#             student.save()[m
[31m-#             return JsonResponse({'success': True, 'message': f'{student.first_name} added successfully'})[m
[31m-#         except Exception as e:[m
[31m-#             return JsonResponse({'success': False, 'message': 'Student adding error: ' + str(e)})[m
[31m-#     return JsonResponse({'success': False, 'message': 'Invalid request'})[m

[33mcommit fa5530f60312e7710e417a229497553a2ec1fad1[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Mon Jul 22 17:28:03 2024 +0500

    Deleting issue fixed

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex 78786f7..8c1a54b 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -49,7 +49,8 @@[m [mdef student_delete(request, student_id):[m
     if request.method == 'POST':[m
         student.delete()[m
         return JsonResponse({'success': True, 'message': f'Student {student.first_name} {student.last_name} deleted successfully.'})[m
[31m-    return redirect('students:student')[m
[32m+[m[32m    return JsonResponse({'success': False, 'message': 'Invalid request method'})[m
[32m+[m
 [m
 [m
 # # students/views.py[m

[33mcommit dbf0a836181b770b75cd4f164139d185611bbcd2[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Mon Jul 22 16:53:31 2024 +0500

    Added the update and Delte Dunctionality to students section

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex de6236e..78786f7 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -1,21 +1,26 @@[m
 # students/views.py[m
[31m-from django.shortcuts import render, redirect[m
[32m+[m[32mfrom django.shortcuts import render, get_object_or_404, redirect[m
 from django.http import JsonResponse[m
 from .models import Student, Department, Program, Batch[m
 from .forms import StudentForm[m
 [m
 def student(request):[m
[31m-        students = Student.objects.all()[m
[31m-        departments = Department.objects.all()[m
[31m-        programs = Program.objects.all()[m
[31m-        batches = Batch.objects.all()[m
[31m-        form = StudentForm()[m
[31m-        return render(request, 'students/students.html', {[m
[32m+[m[32m    students = Student.objects.all()[m
[32m+[m[32m    departments = Department.objects.all()[m
[32m+[m[32m    programs = Program.objects.all()[m
[32m+[m[32m    batches = Batch.objects.all()[m
[32m+[m[32m    form = StudentForm()[m
[32m+[m
[32m+[m[32m    # Create a dictionary of forms for each student[m
[32m+[m[32m    update_forms = {student.student_id: StudentForm(instance=student) for student in students}[m
[32m+[m
[32m+[m[32m    return render(request, 'students/students.html', {[m
         'students': students,[m
         'departments': departments,[m
         'programs': programs,[m
         'batches': batches,[m
[31m-        'form': form[m
[32m+[m[32m        'form': form,[m
[32m+[m[32m        'update_forms': update_forms,[m
     })[m
 [m
 def add_student(request):[m
[36m@@ -28,6 +33,25 @@[m [mdef add_student(request):[m
             return JsonResponse({'success': False, 'message': 'Student adding error: ' + str(form.errors)})[m
     return JsonResponse({'success': False, 'message': 'Invalid request'})[m
 [m
[32m+[m[32mdef student_update(request, student_id):[m
[32m+[m[32m    student = get_object_or_404(Student, student_id=student_id)[m
[32m+[m[32m    if request.method == 'POST':[m
[32m+[m[32m        form = StudentForm(request.POST, instance=student)[m
[32m+[m[32m        if form.is_valid():[m
[32m+[m[32m            form.save()[m
[32m+[m[32m            return JsonResponse({'success': True, 'message': 'Student updated successfully!'})[m
[32m+[m[32m        else:[m
[32m+[m[32m            return JsonResponse({'success': False, 'message': 'Failed to update student.', 'errors': form.errors})[m
[32m+[m[32m    return JsonResponse({'success': False, 'message': 'Invalid request method'})[m
[32m+[m
[32m+[m[32mdef student_delete(request, student_id):[m
[32m+[m[32m    student = get_object_or_404(Student, student_id=student_id)[m
[32m+[m[32m    if request.method == 'POST':[m
[32m+[m[32m        student.delete()[m
[32m+[m[32m        return JsonResponse({'success': True, 'message': f'Student {student.first_name} {student.last_name} deleted successfully.'})[m
[32m+[m[32m    return redirect('students:student')[m
[32m+[m
[32m+[m
 # # students/views.py[m
 # from django.shortcuts import render, redirect[m
 # from django.http import JsonResponse[m

[33mcommit acded803234fd20247df7a3d48d3150b7ea8efad[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Sun Jul 21 20:47:37 2024 +0500

    Table Changrs and added some templates

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex fa8032e..de6236e 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -2,38 +2,68 @@[m
 from django.shortcuts import render, redirect[m
 from django.http import JsonResponse[m
 from .models import Student, Department, Program, Batch[m
[32m+[m[32mfrom .forms import StudentForm[m
 [m
 def student(request):[m
[31m-    students = Student.objects.all()[m
[31m-    departments = Department.objects.all()[m
[31m-    programs = Program.objects.all()[m
[31m-    batches = Batch.objects.all()[m
[31m-    statuses = Student.STUDENT_STATUS_CHOICES  # Get status choices directly from the model[m
[31m-    return render(request, 'students/students.html', {[m
[32m+[m[32m        students = Student.objects.all()[m
[32m+[m[32m        departments = Department.objects.all()[m
[32m+[m[32m        programs = Program.objects.all()[m
[32m+[m[32m        batches = Batch.objects.all()[m
[32m+[m[32m        form = StudentForm()[m
[32m+[m[32m        return render(request, 'students/students.html', {[m
         'students': students,[m
         'departments': departments,[m
         'programs': programs,[m
         'batches': batches,[m
[31m-        'statuses': statuses  # Pass statuses to the template[m
[32m+[m[32m        'form': form[m
     })[m
 [m
 def add_student(request):[m
     if request.method == 'POST':[m
[31m-        try:[m
[31m-            student = Student([m
[31m-                first_name=request.POST.get('first_name'),[m
[31m-                last_name=request.POST.get('last_name'),[m
[31m-                father_name=request.POST.get('father_name'),[m
[31m-                date_of_birth=request.POST.get('date_of_birth'),[m
[31m-                registration_number = request.POST.get('registration_number', '').upper(),[m
[31m-                enrollment_year=request.POST.get('enrollment_year'),[m
[31m-                status=request.POST.get('status'),[m
[31m-                department_id=request.POST.get('department'),[m
[31m-                program_id=request.POST.get('program'),[m
[31m-                batch_id=request.POST.get('batch')[m
[31m-            )[m
[31m-            student.save()[m
[32m+[m[32m        form = StudentForm(request.POST)[m
[32m+[m[32m        if form.is_valid():[m
[32m+[m[32m            student = form.save()[m
             return JsonResponse({'success': True, 'message': f'{student.first_name} added successfully'})[m
[31m-        except Exception as e:[m
[31m-            return JsonResponse({'success': False, 'message': 'Student adding error: ' + str(e)})[m
[32m+[m[32m        else:[m
[32m+[m[32m            return JsonResponse({'success': False, 'message': 'Student adding error: ' + str(form.errors)})[m
     return JsonResponse({'success': False, 'message': 'Invalid request'})[m
[32m+[m
[32m+[m[32m# # students/views.py[m
[32m+[m[32m# from django.shortcuts import render, redirect[m
[32m+[m[32m# from django.http import JsonResponse[m
[32m+[m[32m# from .models import Student, Department, Program, Batch[m
[32m+[m
[32m+[m[32m# def student(request):[m
[32m+[m[32m#     students = Student.objects.all()[m
[32m+[m[32m#     departments = Department.objects.all()[m
[32m+[m[32m#     programs = Program.objects.all()[m
[32m+[m[32m#     batches = Batch.objects.all()[m
[32m+[m[32m#     statuses = Student.STUDENT_STATUS_CHOICES  # Get status choices directly from the model[m
[32m+[m[32m#     return render(request, 'students/students.html', {[m
[32m+[m[32m#         'students': students,[m
[32m+[m[32m#         'departments': departments,[m
[32m+[m[32m#         'programs': programs,[m
[32m+[m[32m#         'batches': batches,[m
[32m+[m[32m#         'statuses': statuses  # Pass statuses to the template[m
[32m+[m[32m#     })[m
[32m+[m
[32m+[m[32m# def add_student(request):[m
[32m+[m[32m#     if request.method == 'POST':[m
[32m+[m[32m#         try:[m
[32m+[m[32m#             student = Student([m
[32m+[m[32m#                 first_name=request.POST.get('first_name'),[m
[32m+[m[32m#                 last_name=request.POST.get('last_name'),[m
[32m+[m[32m#                 father_name=request.POST.get('father_name'),[m
[32m+[m[32m#                 date_of_birth=request.POST.get('date_of_birth'),[m
[32m+[m[32m#                 registration_number = request.POST.get('registration_number', '').upper(),[m
[32m+[m[32m#                 enrollment_year=request.POST.get('enrollment_year'),[m
[32m+[m[32m#                 status=request.POST.get('status'),[m
[32m+[m[32m#                 department_id=request.POST.get('department'),[m
[32m+[m[32m#                 program_id=request.POST.get('program'),[m
[32m+[m[32m#                 batch_id=request.POST.get('batch')[m
[32m+[m[32m#             )[m
[32m+[m[32m#             student.save()[m
[32m+[m[32m#             return JsonResponse({'success': True, 'message': f'{student.first_name} added successfully'})[m
[32m+[m[32m#         except Exception as e:[m
[32m+[m[32m#             return JsonResponse({'success': False, 'message': 'Student adding error: ' + str(e)})[m
[32m+[m[32m#     return JsonResponse({'success': False, 'message': 'Invalid request'})[m

[33mcommit 5dda15282b03e5ccd78f381517cb4a4efa025f98[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Sun Jul 21 17:00:54 2024 +0500

    Templates Updates

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex 30ae7fb..fa8032e 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -1,25 +1,39 @@[m
 # students/views.py[m
[31m-from django.contrib.admin.sites import site[m
[31m-from django.shortcuts import render[m
[31m-from django.utils.decorators import method_decorator[m
[31m-from django.contrib.admin.views.decorators import staff_member_required[m
[31m-from django.views.generic import TemplateView[m
[31m-from .models import Student[m
[32m+[m[32mfrom django.shortcuts import render, redirect[m
[32m+[m[32mfrom django.http import JsonResponse[m
[32m+[m[32mfrom .models import Student, Department, Program, Batch[m
 [m
[31m-@method_decorator(staff_member_required, name='dispatch')[m
[31m-class student(TemplateView):[m
[31m-    template_name = 'students/students.html'[m
[32m+[m[32mdef student(request):[m
[32m+[m[32m    students = Student.objects.all()[m
[32m+[m[32m    departments = Department.objects.all()[m
[32m+[m[32m    programs = Program.objects.all()[m
[32m+[m[32m    batches = Batch.objects.all()[m
[32m+[m[32m    statuses = Student.STUDENT_STATUS_CHOICES  # Get status choices directly from the model[m
[32m+[m[32m    return render(request, 'students/students.html', {[m
[32m+[m[32m        'students': students,[m
[32m+[m[32m        'departments': departments,[m
[32m+[m[32m        'programs': programs,[m
[32m+[m[32m        'batches': batches,[m
[32m+[m[32m        'statuses': statuses  # Pass statuses to the template[m
[32m+[m[32m    })[m
 [m
[31m-    def get_context_data(self, **kwargs):[m
[31m-        context = super().get_context_data(**kwargs)[m
[31m-        # Get admin filters for the model[m
[31m-        admin_filters = site._registry[Student].get_list_filter(request=self.request)[m
[31m-        context['admin_filters'] = admin_filters[m
[31m-        context['students'] = Student.objects.all()[m
[31m-        return context[m
[31m-[m
[31m-[m
[31m-# def student(request, course_id):[m
[31m-#     # Query students who are enrolled in the given course_id[m
[31m-#     students = Student.objects.filter(enrollments__course_id=course_id)[m
[31m-#     return render(request, 'students/students.html', {'students': students})[m
\ No newline at end of file[m
[32m+[m[32mdef add_student(request):[m
[32m+[m[32m    if request.method == 'POST':[m
[32m+[m[32m        try:[m
[32m+[m[32m            student = Student([m
[32m+[m[32m                first_name=request.POST.get('first_name'),[m
[32m+[m[32m                last_name=request.POST.get('last_name'),[m
[32m+[m[32m                father_name=request.POST.get('father_name'),[m
[32m+[m[32m                date_of_birth=request.POST.get('date_of_birth'),[m
[32m+[m[32m                registration_number = request.POST.get('registration_number', '').upper(),[m
[32m+[m[32m                enrollment_year=request.POST.get('enrollment_year'),[m
[32m+[m[32m                status=request.POST.get('status'),[m
[32m+[m[32m                department_id=request.POST.get('department'),[m
[32m+[m[32m                program_id=request.POST.get('program'),[m
[32m+[m[32m                batch_id=request.POST.get('batch')[m
[32m+[m[32m            )[m
[32m+[m[32m            student.save()[m
[32m+[m[32m            return JsonResponse({'success': True, 'message': f'{student.first_name} added successfully'})[m
[32m+[m[32m        except Exception as e:[m
[32m+[m[32m            return JsonResponse({'success': False, 'message': 'Student adding error: ' + str(e)})[m
[32m+[m[32m    return JsonResponse({'success': False, 'message': 'Invalid request'})[m

[33mcommit 9025a9bed2c73c7eaddc65695ef17d774b0c14f6[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Sat Jul 20 22:37:39 2024 +0500

    Removed the id section from the admin to easily navigate through columns

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex 0f03153..30ae7fb 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -1,8 +1,25 @@[m
[32m+[m[32m# students/views.py[m
[32m+[m[32mfrom django.contrib.admin.sites import site[m
 from django.shortcuts import render[m
[32m+[m[32mfrom django.utils.decorators import method_decorator[m
[32m+[m[32mfrom django.contrib.admin.views.decorators import staff_member_required[m
[32m+[m[32mfrom django.views.generic import TemplateView[m
 from .models import Student[m
[31m-# Create your views here.[m
 [m
[31m-def student(request, course_id):[m
[31m-    # Query students who are enrolled in the given course_id[m
[31m-    students = Student.objects.filter(enrollments__course_id=course_id)[m
[31m-    return render(request, 'students/students.html', {'students': students})[m
\ No newline at end of file[m
[32m+[m[32m@method_decorator(staff_member_required, name='dispatch')[m
[32m+[m[32mclass student(TemplateView):[m
[32m+[m[32m    template_name = 'students/students.html'[m
[32m+[m
[32m+[m[32m    def get_context_data(self, **kwargs):[m
[32m+[m[32m        context = super().get_context_data(**kwargs)[m
[32m+[m[32m        # Get admin filters for the model[m
[32m+[m[32m        admin_filters = site._registry[Student].get_list_filter(request=self.request)[m
[32m+[m[32m        context['admin_filters'] = admin_filters[m
[32m+[m[32m        context['students'] = Student.objects.all()[m
[32m+[m[32m        return context[m
[32m+[m
[32m+[m
[32m+[m[32m# def student(request, course_id):[m
[32m+[m[32m#     # Query students who are enrolled in the given course_id[m
[32m+[m[32m#     students = Student.objects.filter(enrollments__course_id=course_id)[m
[32m+[m[32m#     return render(request, 'students/students.html', {'students': students})[m
\ No newline at end of file[m

[33mcommit 7d7eafd03d05c2fb62e6c49410e62eb606b0b6d5[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Sat Jul 20 19:35:02 2024 +0500

    Added Requirments.txt file

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex 13a3722..0f03153 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -3,5 +3,6 @@[m [mfrom .models import Student[m
 # Create your views here.[m
 [m
 def student(request, course_id):[m
[31m-    students = Student.objects.filter(enrollment__course_id=course_id)[m
[31m-    return render(request, 'student.html', {'students': students})[m
[32m+[m[32m    # Query students who are enrolled in the given course_id[m
[32m+[m[32m    students = Student.objects.filter(enrollments__course_id=course_id)[m
[32m+[m[32m    return render(request, 'students/students.html', {'students': students})[m
\ No newline at end of file[m

[33mcommit 804d1da476c42b4f427f68534fe9d9ebe2ded638[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Sat Jul 20 17:25:06 2024 +0500

    Added Initial Templates for Data

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex 25fb7a3..13a3722 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -1,5 +1,7 @@[m
 from django.shortcuts import render[m
[31m-[m
[32m+[m[32mfrom .models import Student[m
 # Create your views here.[m
[31m-def student_list(request):[m
[31m-    pass[m
\ No newline at end of file[m
[32m+[m
[32m+[m[32mdef student(request, course_id):[m
[32m+[m[32m    students = Student.objects.filter(enrollment__course_id=course_id)[m
[32m+[m[32m    return render(request, 'student.html', {'students': students})[m

[33mcommit 30915be923de0c57cf5e0b43eaaa37dd4953dce6[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Thu Jul 18 16:05:01 2024 +0500

     Chnages in URLS, Admin.py, Urls.py, andadded relavent data to app

[1mdiff --git a/students/views.py b/students/views.py[m
[1mindex 91ea44a..25fb7a3 100644[m
[1m--- a/students/views.py[m
[1m+++ b/students/views.py[m
[36m@@ -1,3 +1,5 @@[m
 from django.shortcuts import render[m
 [m
 # Create your views here.[m
[32m+[m[32mdef student_list(request):[m
[32m+[m[32m    pass[m
\ No newline at end of file[m

[33mcommit 969b83120df8f11ee5fe79cc57be3675354c5f44[m
Author: uzair <smartuzairsahil@gmail.com>
Date:   Thu Jul 18 14:10:11 2024 +0500

    Added Apps

[1mdiff --git a/students/views.py b/students/views.py[m
[1mnew file mode 100644[m
[1mindex 0000000..91ea44a[m
[1m--- /dev/null[m
[1m+++ b/students/views.py[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mfrom django.shortcuts import render[m
[32m+[m
[32m+[m[32m# Create your views here.[m
